syntax = "proto3";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-swagger/options/annotations.proto";

package confessionroom;

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
    info: {
		title: "Confession Room";
		version: "1.0";
		contact: {
			name: "ConfessionRoom project";
			url: "https://github.com/wooshot/ConfessionRoom";
			email: "wooshot@gmail.com";
		};
    };
    schemes: HTTP;
    host: "localhost:8090";
};

service Confession {
    rpc HealthCheck(Empty) returns (HealthCheckReply) {
        option(google.api.http) = {
            get: "/api/health_check",
        };
    };
    rpc CreateChatRoom(Empty) returns (UUID) {
        option(google.api.http) = {
            get: "/api/chatroom/create",
        };
    };
    rpc CloseChatRoom(UUID) returns (Empty) {
        option(google.api.http) = {
            get: "/api/charroom/close",
        };
    };
}

message Empty{}

message HealthCheckReply {
    string message = 1;
}

message UUID {
    string uuid = 1;
}

